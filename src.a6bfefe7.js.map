{"version":3,"sources":["index.js"],"names":["refs","daySpan","document","querySelector","hoursSpan","minsSpan","secsSpan","CountdownTimer","constructor","selector","targetDate","getRefs","start","getTime","setInterval","bind","daysSpan","padStrStart","num","String","padStart","renderTimer","obj","days","hours","mins","secs","innerHTML","makeTime","ms","Math","floor","now","Date","time","timer"],"mappings":";AAAA,MAAMA,EAAO,CACTC,QAASC,SAASC,cAAc,uBAChCC,UAAWF,SAASC,cAAc,wBAClCE,SAAUH,SAASC,cAAc,uBACjCG,SAAUJ,SAASC,cAAc,wBAGrC,MAAMI,EACFC,aAAY,SAAEC,EAAF,WAAYC,IACfD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAEbV,KAAAA,KAAO,KAAKW,QAAQF,GAE7BG,QACSC,KAAAA,UACLC,YAAY,KAAKD,QAAQE,KAAK,MAAO,KAGzCJ,QAAQF,GAMG,MAAA,CAAEO,SALQd,SAASC,iBAAiBM,yBAKxBL,UAJDF,SAASC,iBAAiBM,0BAIdJ,SAHbH,SAASC,iBAAiBM,yBAGHH,SAFvBJ,SAASC,iBAAiBM,0BAI/CQ,YAAYC,GACDC,OAAAA,OAAOD,GAAKE,SAAS,EAAG,GAEnCC,YAAYC,GACF,MAAA,SAAEN,EAAF,UAAYZ,EAAZ,SAAuBC,EAAvB,SAAiCC,GAAa,KAAKN,MACnD,KAAEuB,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBC,GAASJ,EAEpCN,EAASW,UAAY,KAAKV,YAAYM,GACtCnB,EAAUuB,UAAY,KAAKV,YAAYO,GACvCnB,EAASsB,UAAY,KAAKV,YAAYQ,GACtCnB,EAASqB,UAAY,KAAKV,YAAYS,GAG1CE,SAASC,GAME,MAAA,CAACN,KALGO,KAAKC,MAAMF,EAAM,OAKdL,MAJFM,KAAKC,MAAOF,EAAM,MAAyB,MAIlCJ,KAHVK,KAAKC,MAAOF,EAAM,KAAoB,KAGtBH,KAFhBI,KAAKC,MAAOF,EAAM,IAAc,MAI/ChB,UACUmB,MAAAA,EAAMC,KAAKD,MACbE,IAAAA,EAAO,KAAKxB,WAAasB,EACzBE,EAAO,IACPA,EAAO,GAENb,KAAAA,YAAY,KAAKO,SAASM,KAMvC,MAAMC,EAAQ,IAAI5B,EAAe,CAC7BE,SAAU,WACVC,WAAY,IAAIuB,KAAK,kBAGzBE,EAAMvB","file":"src.a6bfefe7.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    daySpan: document.querySelector('[data-value=\"days\"]'),\n    hoursSpan: document.querySelector('[data-value=\"hours\"]'),\n    minsSpan: document.querySelector('[data-value=\"mins\"]'),\n    secsSpan: document.querySelector('[data-value=\"secs\"]'),\n}\n\nclass CountdownTimer {\n    constructor({ selector, targetDate } ) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n\n        this.refs = this.getRefs(selector);\n    }\n    start() {\n        this.getTime();\n        setInterval(this.getTime.bind(this), 1000);\n    }\n    \n    getRefs(selector) {\n        const daysSpan = document.querySelector(`${selector} [data-value=\"days\"]`);\n        const hoursSpan = document.querySelector(`${selector} [data-value=\"hours\"]`);\n        const minsSpan = document.querySelector(`${selector} [data-value=\"mins\"]`);\n        const secsSpan = document.querySelector(`${selector} [data-value=\"secs\"]`);\n        \n        return { daysSpan, hoursSpan, minsSpan, secsSpan };\n    };\n    padStrStart(num) {\n        return String(num).padStart(2, 0);\n    };\n    renderTimer(obj) {\n        const { daysSpan, hoursSpan, minsSpan, secsSpan } = this.refs;\n        const { days, hours, mins, secs } = obj;\n        \n        daysSpan.innerHTML = this.padStrStart(days);\n        hoursSpan.innerHTML = this.padStrStart(hours);\n        minsSpan.innerHTML = this.padStrStart(mins);\n        secsSpan.innerHTML = this.padStrStart(secs);\n\n    };\n    makeTime(ms) {\n        let days = Math.floor(ms / (1000 * 60 * 60 * 24));\n        let hours = Math.floor((ms % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        let mins = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));\n        let secs = Math.floor((ms % (1000 * 60)) / 1000);\n        \n        return {days, hours, mins, secs}\n     };\n    getTime() {\n        const now = Date.now();\n        let time = this.targetDate - now;\n        if (time < 0 ) {\n            time = 0;\n        }\n        this.renderTimer(this.makeTime(time));\n    }\n};\n\n\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Sep 04, 2021'),\n});\n\ntimer.start();"]}